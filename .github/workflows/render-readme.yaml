on:
  push:
    branches: master



name: Render README

jobs:
  render:
    name: ubuntu readme
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v1
      - uses: r-lib/actions/setup-pandoc@v1
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), "depends.Rds", version = 2)
        shell: Rscript {0}
      - name: Install system dependencies
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
          # install spatial dependencies
          sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
          sudo apt update
          sudo apt install \
            libudunits2-dev \
            libgdal-dev \
            libgeos-dev \
            libproj-dev

      - name: Install dependencies
        run: |
          library(remotes)
          deps <- readRDS("depends.Rds")
          deps[["installed"]] <- vapply(deps[["package"]], remotes:::local_sha, character(1))
          update(deps)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Install packages
        run: Rscript -e 'install.packages(c("rmarkdown", "rgdal", "dplyr", "ggplot2", "hrbrthemes", "echor", "extrafont", "ggspatial", "sf", "ggrepel", "purrr", "raster", "sessioninfo"))'
      - name: Render README
        run: Rscript -e 'rmarkdown::render("README.Rmd", output_format = "md_document")'
      - name: Commit results
        run: |
          git config --local user.email ${{secrets.GH_EMAIL}}
          git config --local user.name ${{secrets.GH_USER}}
          git add README.md man/figures/README-*
          git commit -m 'Re-build README.Rmd' || echo "No changes to commit"
          git push origin || echo "No changes to commit"
